{"version":3,"sources":["webpack://H5SDK/webpack/universalModuleDefinition","webpack://H5SDK/webpack/bootstrap","webpack://H5SDK/./src/libs/utils.ts","webpack://H5SDK/./src/libs/canvas.ts","webpack://H5SDK/./src/libs/text.ts","webpack://H5SDK/./src/libs/block.ts","webpack://H5SDK/./src/libs/line.ts","webpack://H5SDK/./src/libs/image.ts","webpack://H5SDK/./src/libs/index.ts","webpack://H5SDK/./src/index.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","color2Rgb","color","document","createElement","style","body","appendChild","result","getComputedStyle","removeChild","mutiSort","data","sort","a","b","zIndex","hex2Rgb","hex","rgb","test","sixHex","replace","kw","push","eval","join","console","log","rgb2Hex","parseInt","toString","length","rgb2rgba","opacity","split","configToData","config","blocks","texts","images","lines","temp","forEach","arr","assign","type","globalCanvas","pixelRatio","devicePixelRatio","createCanvas","width","height","backgroundColor","ctx","getContext","beginPath","fillStyle","fillRect","draw","append","toDataURL","drawText","isBlock","blockX","blockY","blockWidth","blockHeight","rgba","x","y","text","fontSize","lineHeight","lineNum","marginLeft","marginRight","textDecoration","baseLine","textAlign","fontFamily","fontWeight","fontStyle","substring","dealText","maxWidth","textWidth","measureText","radio","dis","slice","dealWords","font","textBaseline","fillText","drawBlock","borderWidth","borderColor","borderRadius","radius","moveTo","lineTo","quadraticCurveTo","lineWidth","strokeStyle","undefined","stroke","fill","textConfig","drawLine","startX","startY","endX","endY","closePath","drawImage","Promise","resolve","url","img","Image","src","crossOrigin","onload","pattern","createPattern","w","h","save","arcTo","clip","restore","drawCirleImage","cx","cy","arc","Math","PI","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","step","next","e","rejected","done","then","apply","debug","this","item","base64"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAe,MAAID,IAEnBD,EAAY,MAAIC,IARlB,CASGK,QAAQ,WACX,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUP,QAGnC,IAAIC,EAASI,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHT,QAAS,IAUV,OANAU,EAAQH,GAAUI,KAAKV,EAAOD,QAASC,EAAQA,EAAOD,QAASM,GAG/DL,EAAOQ,GAAI,EAGJR,EAAOD,QA0Df,OArDAM,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAASd,EAASe,EAAMC,GAC3CV,EAAoBW,EAAEjB,EAASe,IAClCG,OAAOC,eAAenB,EAASe,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEV,EAAoBgB,EAAI,SAAStB,GACX,oBAAXuB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAenB,EAASuB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAShC,GAChC,IAAIe,EAASf,GAAUA,EAAO2B,WAC7B,WAAwB,OAAO3B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAK,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG7B,EAAoBgC,EAAI,GAIjBhC,EAAoBA,EAAoBiC,EAAI,G,wEClFrD,wTAIO,MAAMC,UAAaC,IACtB,MAAM3B,EAAI4B,SAASC,cAAc,OACjC7B,EAAE8B,MAAMH,MAAQA,EAChBC,SAASG,KAAKC,YAAYhC,GAC1B,MAAMiC,EAAS3C,OAAO4C,iBAAiBlC,GAAG2B,MAE1C,OADAC,SAASG,KAAKI,YAAYnC,GACnBiC,GAMEG,SAAYC,IACrBA,EAAKC,KAAK,CAACC,EAAGC,IACHD,EAAEE,OAASD,EAAEC,SAOfC,QAAWC,MACpB,MAAMC,IAAM,GAEZ,GAAI,mBAAmBC,KAAKF,KAAM,CAC9B,IAAIG,EAAS,IACbH,IAAII,QAAQ,cAAc,SAAUC,GAChCF,GAAUE,EAAKA,KAEnBL,IAAMG,EAGV,MAAI,kBAAkBD,KAAKF,MACvBA,IAAII,QAAQ,iBAAiB,SAAUC,IACnCJ,IAAIK,KAAKC,KAAK,KAAOF,QAEjB,OAAMJ,IAAIO,KAAK,UAGvBC,QAAQC,IAAK,SAAQV,iBACd,eAOFW,QAAWV,IACpB,GAAI,kCAAkCC,KAAKD,GAAM,CAE7C,IAAID,EAAM,IAOV,OANAC,EAAIG,QAAQ,YAAY,SAAUC,GAG9BA,GADAA,EAAKO,SAASP,EAAI,IAAIQ,SAAS,KACvBC,OAAS,EAAI,EAAIT,EAAKA,EAC9BL,GAAOK,KAEJL,EAIP,OADAS,QAAQC,IAAK,SAAQT,eACd,QAQFc,SAAW,CAACd,EAAKe,KAE1B,MAAQ,GADKf,EAAIgB,MAAM,KACR,MAAMD,MAMZE,aAAgBC,IACzB,MAAM,OAAEC,EAAS,GAAX,MAAeC,EAAQ,GAAvB,OAA2BC,EAAS,GAApC,MAAwCC,EAAQ,IAAOJ,EACvDK,EAAO,GAsCb,OArCIJ,EAAON,OAAS,GAChBM,EAAOK,QAAS1E,IACPA,EAAE+C,SACH/C,EAAE+C,OAAS,GAEf,MAAM4B,EAAMjE,OAAOkE,OAAOlE,OAAOkE,OAAO,GAAI5E,GAAI,CAAE6E,KAAM,WACxDJ,EAAKlB,KAAKoB,KAGdL,EAAMP,OAAS,GACfO,EAAMI,QAAS1E,IACNA,EAAE+C,SACH/C,EAAE+C,OAAS,GAEf,MAAM4B,EAAMjE,OAAOkE,OAAOlE,OAAOkE,OAAO,GAAI5E,GAAI,CAAE6E,KAAM,UACxDJ,EAAKlB,KAAKoB,KAGdJ,EAAOR,OAAS,GAChBQ,EAAOG,QAAS1E,IACPA,EAAE+C,SACH/C,EAAE+C,OAAS,GAEf,MAAM4B,EAAMjE,OAAOkE,OAAOlE,OAAOkE,OAAO,GAAI5E,GAAI,CAAE6E,KAAM,WACxDJ,EAAKlB,KAAKoB,KAGdH,EAAMT,OAAS,GACfS,EAAME,QAAS1E,IACNA,EAAE+C,SACH/C,EAAE+C,OAAS,GAEf,MAAM4B,EAAMjE,OAAOkE,OAAOlE,OAAOkE,OAAO,GAAI5E,GAAI,CAAE6E,KAAM,UACxDJ,EAAKlB,KAAKoB,KAGlBjC,SAAS+B,GACFA,I,+CCzHX,IAAIK,EACAC,EAAanF,OAAOoF,iBAEjB,MAAMC,EAAe,CAACC,EAAOC,EAAQC,EAAkB,WAC1DN,EAAe5C,SAASC,cAAc,WACzB+C,MAAQA,EAAQH,EAC7BD,EAAaK,OAASA,EAASJ,EAC/BD,EAAa1C,MAAM8C,MAAQA,EAAQ,KACnCJ,EAAa1C,MAAM+C,OAASA,EAAS,KACrC,MAAME,EAAMP,EAAaQ,WAAW,MAIpC,OAHAD,EAAIE,YACJF,EAAIG,UAAYJ,EAChBC,EAAII,SAAS,EAAG,EAAGP,EAAQH,EAAYI,EAASJ,GACzCD,GAGEY,EAAO,CAACR,EAAOC,KACxBjD,SAASG,KAAKsD,OAAOb,GACdA,EAAac,aCQXC,EAAW,CAACvB,EAAOwB,EAASC,EAAS,EAAGC,EAAS,EAAGC,EAAa,EAAGC,EAAc,KAC3F,MAAMb,EAAMP,EAAaQ,WAAW,MACpC,IAAIa,EACJ,MAAM,EAAEC,EAAF,EAAKC,EAAL,KAAQC,EAAR,SAAcC,EAAd,MAAwBtE,EAAQ,OAAhC,QAAwCgC,EAAU,EAAlD,WAAqDuC,EAArD,QAAiEC,EAAjE,MAA0EvB,EAAQ,KAAlF,WAAwFwB,EAAxF,YAAoGC,EAApG,eAAiHC,EAAjH,SAAiIC,EAAW,aAA5I,UAA0JC,EAAY,QAAtK,WAA+KC,EAAa,aAA5L,WAA0MC,EAAa,SAAvN,UAAiOC,EAAY,UAAa3C,EAG5P6B,EAD0B,MAA1BlE,EAAMiF,UAAU,EAAG,GACZlD,YAAShB,YAAQf,GAAQgC,GAED,SAA1BhC,EAAMiF,UAAU,EAAG,GACjBjF,EAEwB,QAA1BA,EAAMiF,UAAU,EAAG,GACjBlD,YAAS/B,EAAOgC,GAGhBD,YAAShC,YAAUC,GAAQgC,GAEtC,MAAMkD,EAnCQ,EAAC9B,EAAKiB,EAAMc,KAC1B,MAAMC,EAAYhC,EAAIiC,YAAYhB,GAAMpB,MAAQH,EAC1CwC,EAAQjB,EAAKvC,OAASsD,EACtBG,EAAMH,EAAYD,EAIxB,OAHII,EAAM,IACNlB,EAAOA,EAAKmB,MAAM,EAAGnB,EAAKvC,OAASyD,EAAMD,GAAS,OAE/CjB,GA4BUoB,CAAUrC,EAAKiB,EAAMpB,GACtC,GAAIY,EAAS,CACT,MAAMuB,EAAYhC,EAAIiC,YAAYhB,GAAMpB,MAAQH,EAE5CqB,EAAIL,GAAUK,EAAIiB,EAAYtB,EAASE,GAAeI,EAAIL,EAASO,GAAYF,EAAIE,EAAWP,EAASE,IACvGb,EAAIsC,KAAQ,GAAEV,KAAaD,KAAcT,OAAcQ,IACvD1B,EAAIG,UAAYW,EAChBd,EAAIuC,aAAef,EACnBxB,EAAIyB,UAAYA,EAChBzB,EAAIwC,SAASV,EAAUf,EAAGC,SAI9BhB,EAAIsC,KAAQ,GAAEV,KAAaD,KAAcT,OAAcQ,IACvD1B,EAAIG,UAAYW,EAChBd,EAAIuC,aAAef,EACnBxB,EAAIyB,UAAYA,EAChBzB,EAAIwC,SAASV,EAAUf,EAAGC,ICtDrByB,EAAazD,IACtB,MAAMgB,EAAMP,EAAaQ,WAAW,OAC9B,EAAEc,EAAF,EAAKC,EAAL,MAAQnB,EAAR,OAAeC,EAAf,YAAuB4C,EAAvB,YAAoCC,EAAaC,aAAcC,EAAS,EAAxE,gBAA2E9C,EAA3E,KAA4FkB,EAAO,IAAOjC,EAChHgB,EAAIE,YACJF,EAAI8C,OAAO/B,EAAGC,EAAI6B,GAClB7C,EAAI+C,OAAOhC,EAAGC,EAAIlB,EAAS+C,GAC3B7C,EAAIgD,iBAAiBjC,EAAGC,EAAIlB,EAAQiB,EAAI8B,EAAQ7B,EAAIlB,GACpDE,EAAI+C,OAAOhC,EAAIlB,EAAQgD,EAAQ7B,EAAIlB,GACnCE,EAAIgD,iBAAiBjC,EAAIlB,EAAOmB,EAAIlB,EAAQiB,EAAIlB,EAAOmB,EAAIlB,EAAS+C,GACpE7C,EAAI+C,OAAOhC,EAAIlB,EAAOmB,EAAI6B,GAC1B7C,EAAIgD,iBAAiBjC,EAAIlB,EAAOmB,EAAGD,EAAIlB,EAAQgD,EAAQ7B,GACvDhB,EAAI+C,OAAOhC,EAAI8B,EAAQ7B,GACvBhB,EAAIgD,iBAAiBjC,EAAGC,EAAGD,EAAGC,EAAI6B,GAClC7C,EAAIiD,UAAYP,EAChB1C,EAAIkD,YAAcP,EAClB3C,EAAIG,UAAYJ,QAAmBoD,EACnCnD,EAAIoD,SACJpD,EAAIqD,OACS,KAATpC,GD4Ca,EAAChC,EAAOqE,KACzB,MAAM,QAAE7C,EAAF,EAAWM,EAAX,EAAcC,EAAd,MAAiBnB,EAAjB,OAAwBC,GAAWwD,EACzC,GAAKrE,EAAM,GAGX,IAAK,IAAItE,EAAI,EAAGA,EAAIsE,EAAMP,OAAQ/D,IAE9B,GADA6F,EAASvB,EAAMtE,GAAI8F,EAASM,EAAGC,EAAGnB,EAAOC,GACrCnF,IAAMsE,EAAMP,OAAS,EACrB,OAAOe,GCnDXR,CAAMgC,EAAKA,KAAM,CAAER,SAAS,EAAMM,IAAGC,IAAGnB,QAAOC,YCpB1CyD,EAAYpE,IACrB,MAAMa,EAAMP,EAAaQ,WAAW,OAC9B,OAAEuD,EAAF,OAAUC,EAAV,KAAkBC,EAAlB,KAAwBC,EAAxB,MAA8B9D,EAA9B,MAAqCjD,EAArC,OAA4Cc,GAAWyB,EAC7Da,EAAIE,YACJF,EAAI8C,OAAOU,EAAQC,GACnBzD,EAAI+C,OAAOW,EAAMC,GACjB3D,EAAIkD,YAActG,EAClBoD,EAAIiD,UAAYpD,EAChBG,EAAI4D,YACJ5D,EAAIoD,UCTKS,EAAa3E,IACtB,MAAMc,EAAMP,EAAaQ,WAAW,MACpC,OAAO,IAAI6D,QAASC,IAChB,MAAM,EAAEhD,EAAF,EAAKC,EAAL,IAAQgD,EAAR,aAAapB,EAAe,EAA5B,YAA+BF,EAAc,EAA7C,YAAgDC,EAAc,QAAWzD,EAC/E,IAAI,MAAEW,EAAF,OAASC,GAAWZ,EACxB,MAAM+E,EAAM,IAAIC,MAChBD,EAAIE,IAAMH,EACVC,EAAIG,YAAc,YAClBH,EAAIlH,MAAM6F,aAAe,OAEzBqB,EAAII,OAAS,KACJxE,GAAUC,IACXD,EAAQoE,EAAIpE,MACZC,EAASmE,EAAInE,SAEZD,GAASC,IACVD,EAASoE,EAAIpE,MAAQoE,EAAInE,OAAUA,GAEnCD,IAAUC,IACVA,EAAUmE,EAAInE,OAASmE,EAAIpE,MAASA,GAGxC,MAAMyE,EAAUtE,EAAIuE,cAAcN,EAAK,aACjCxI,EAAImH,EACJ4B,EAAI3E,EACJ4E,EAAI3E,EACVE,EAAI0E,OACJ1E,EAAIE,YACJF,EAAI8C,OAAO/B,EAAItF,EAAGuF,GAClBhB,EAAI2E,MAAM5D,EAAIyD,EAAGxD,EAAGD,EAAIyD,EAAGxD,EAAIyD,EAAGhJ,GAClCuE,EAAI2E,MAAM5D,EAAIyD,EAAGxD,EAAIyD,EAAG1D,EAAGC,EAAIyD,EAAGhJ,GAClCuE,EAAI2E,MAAM5D,EAAGC,EAAIyD,EAAG1D,EAAGC,EAAGvF,GAC1BuE,EAAI2E,MAAM5D,EAAGC,EAAGD,EAAIyD,EAAGxD,EAAGvF,GAC1BuE,EAAIiD,UAAYP,EAChB1C,EAAIkD,YAAcP,EAClB3C,EAAIoD,SACJpD,EAAI4D,YACJ5D,EAAIG,UAAYmE,EAChBtE,EAAIqD,OACJrD,EAAI4E,OACJ5E,EAAI6D,UAAUI,EAAKlD,EAAGC,EAAGnB,EAAOC,GAEhCE,EAAI6E,UACJd,EAAQ,OAQPe,EAAkB5F,IAC3B,MAAMc,EAAMP,EAAaQ,WAAW,MACpC,OAAO,IAAI6D,QAASC,IAChB,MAAM,EAAEhD,EAAF,EAAKC,EAAL,MAAQnB,EAAR,OAAeC,EAAf,IAAuBkE,EAAvB,aAA4BpB,EAA5B,YAA0CF,EAA1C,YAAuDC,GAAgBzD,EACvE+E,EAAM,IAAIC,MAChBD,EAAIE,IAAMH,EACVC,EAAIG,YAAc,YAClBH,EAAII,OAAS,KAOT,MAAM5I,EAAIoE,EACJ5E,EAAI,EAAIQ,EACRsJ,EAAKhE,EAAItF,EACTuJ,EAAKhE,EAAIvF,EACT6I,EAAUtE,EAAIuE,cAAcN,EAAK,aACvCjE,EAAI0E,OACJ1E,EAAIE,YACJF,EAAI8C,OAAO/B,EAAItF,EAAGuF,GAClBhB,EAAIiF,IAAIF,EAAIC,EAAIvJ,EAAG,EAAG,EAAIyJ,KAAKC,IAC/BnF,EAAIG,UAAYmE,EAChBtE,EAAIqD,OACJrD,EAAI4E,OACJ5E,EAAI6D,UAAUI,EAAKlD,EAAGC,EAAG/F,EAAGA,GAC5B+E,EAAI6E,UACJd,EAAQ,OCpFpB,IAAIqB,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIzB,WAAU,SAAUC,EAAS0B,GAC/C,SAASC,EAAU9J,GAAS,IAAM+J,EAAKH,EAAUI,KAAKhK,IAAW,MAAOiK,GAAKJ,EAAOI,IACpF,SAASC,EAASlK,GAAS,IAAM+J,EAAKH,EAAS,MAAU5J,IAAW,MAAOiK,GAAKJ,EAAOI,IACvF,SAASF,EAAKzI,GAJlB,IAAetB,EAIasB,EAAO6I,KAAOhC,EAAQ7G,EAAOtB,QAJ1CA,EAIyDsB,EAAOtB,MAJhDA,aAAiB2J,EAAI3J,EAAQ,IAAI2J,GAAE,SAAUxB,GAAWA,EAAQnI,OAIToK,KAAKN,EAAWI,GAClGH,GAAMH,EAAYA,EAAUS,MAAMZ,EAASC,GAAc,KAAKM,YAU/D,SAAS3J,EAAO8C,GACnB,MAAM,MAAEc,EAAF,OAASC,EAAT,gBAAiBC,EAAkB,OAAnC,MAA2CmG,EAA3C,WAAkDxG,EAAlD,OAA8DV,EAA9D,MAAsEC,EAAtE,OAA6EC,EAA7E,MAAqFC,GAAUJ,EACrG,OAAO,IAAI+E,QAAQ,CAACC,EAAS0B,IAAWL,EAAUe,UAAM,OAAQ,GAAQ,YACpE,MAAM7I,EAAOwB,YAAaC,GAC1Ba,EAAaC,EAAOC,EAAQC,GAC5B,IAAK,IAAIpF,EAAI,EAAGA,EAAI2C,EAAKoB,OAAQ/D,IAAK,CAClC,MAAMyL,EAAO9I,EAAK3C,GAClB,GAAkB,WAAdyL,EAAK5G,KACLiD,EAAU2D,QAET,GAAkB,UAAdA,EAAK5G,KACVgB,EAAS4F,GAAM,QAEd,GAAkB,UAAdA,EAAK5G,KACV+D,EAAS6C,QAER,GAAkB,WAAdA,EAAK5G,KAAmB,CAC7B,MAAM,MAAEK,EAAF,OAASC,EAAT,aAAiB8C,GAAiBwD,EACpCvG,IAAUC,GAAUD,IAAU+C,QACxBkC,EAAesB,SAGfvC,EAAUuC,IAI5B,MAAMC,EAAShG,EAAKR,EAAOC,GAC3B,OAAOiE,EAAQsC,OC3CvB","file":"index.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"H5SDK\"] = factory();\n\telse\n\t\troot[\"H5SDK\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/**\n * 颜色名转rgb\n * @param color red => rgb(255,0,0)\n */\nexport const color2Rgb = (color) => {\n    const d = document.createElement('div');\n    d.style.color = color;\n    document.body.appendChild(d);\n    const result = window.getComputedStyle(d).color;\n    document.body.removeChild(d);\n    return result;\n};\n/**\n * 数组根据zIndex排序\n * @param data\n */\nexport const mutiSort = (data) => {\n    data.sort((a, b) => {\n        return a.zIndex - b.zIndex;\n    });\n};\n/**\n * 十六进制转为RGB\n * @param hex\n */\nexport const hex2Rgb = (hex) => {\n    const rgb = []; // 定义rgb数组\n    // 判断传入是否为#三位十六进制数\n    if (/^\\#[0-9A-F]{3}$/i.test(hex)) {\n        let sixHex = '#';\n        hex.replace(/[0-9A-F]/gi, function (kw) {\n            sixHex += kw + kw; // 把三位16进制数转化为六位\n        });\n        hex = sixHex; // 保存回hex\n    }\n    // 判断传入是否为#六位十六进制数\n    if (/^#[0-9A-F]{6}$/i.test(hex)) {\n        hex.replace(/[0-9A-F]{2}/gi, function (kw) {\n            rgb.push(eval('0x' + kw)); // 十六进制转化为十进制并存如数组\n        });\n        return `rgb(${rgb.join(',')})`; // 输出RGB格式颜色\n    }\n    else {\n        console.log(`Input ${hex} is wrong!`);\n        return 'rgb(0,0,0)';\n    }\n};\n/**\n * RGB转为十六进制\n * @param rgb\n */\nexport const rgb2Hex = (rgb) => {\n    if (/^rgb\\((\\d{1,3}\\,){2}\\d{1,3}\\)$/i.test(rgb)) {\n        // test RGB\n        let hex = '#'; // 定义十六进制颜色变量\n        rgb.replace(/\\d{1,3}/g, function (kw) {\n            // 提取rgb数字\n            kw = parseInt(kw, 10).toString(16); // 转为十六进制\n            kw = kw.length < 2 ? 0 + kw : kw; // 判断位数，保证两位\n            hex += kw; // 拼接\n        });\n        return hex; // 返回十六进制\n    }\n    else {\n        console.log(`Input ${rgb} is wrong!`);\n        return '#000'; // 输入格式错误,返回#000\n    }\n};\n/**\n * rgb转rgba\n * @param rgb 颜色值\n * @param opacity 透明度\n */\nexport const rgb2rgba = (rgb, opacity) => {\n    const rgba = rgb.split(')');\n    return `${rgba[0]},${opacity})`;\n};\n/**\n * 数据处理\n * @param config\n */\nexport const configToData = (config) => {\n    const { blocks = [], texts = [], images = [], lines = [] } = config;\n    const temp = [];\n    if (blocks.length > 0) {\n        blocks.forEach((i) => {\n            if (!i.zIndex) {\n                i.zIndex = 0;\n            }\n            const arr = Object.assign(Object.assign({}, i), { type: 'blocks' });\n            temp.push(arr);\n        });\n    }\n    if (texts.length > 0) {\n        texts.forEach((i) => {\n            if (!i.zIndex) {\n                i.zIndex = 0;\n            }\n            const arr = Object.assign(Object.assign({}, i), { type: 'texts' });\n            temp.push(arr);\n        });\n    }\n    if (images.length > 0) {\n        images.forEach((i) => {\n            if (!i.zIndex) {\n                i.zIndex = 0;\n            }\n            const arr = Object.assign(Object.assign({}, i), { type: 'images' });\n            temp.push(arr);\n        });\n    }\n    if (lines.length > 0) {\n        lines.forEach((i) => {\n            if (!i.zIndex) {\n                i.zIndex = 0;\n            }\n            const arr = Object.assign(Object.assign({}, i), { type: 'lines' });\n            temp.push(arr);\n        });\n    }\n    mutiSort(temp);\n    return temp;\n};\n","let globalCanvas;\nlet pixelRatio = window.devicePixelRatio;\n// canvas初始化\nexport const createCanvas = (width, height, backgroundColor = '#fff') => {\n    globalCanvas = document.createElement('canvas');\n    globalCanvas.width = width * pixelRatio;\n    globalCanvas.height = height * pixelRatio;\n    globalCanvas.style.width = width + 'px';\n    globalCanvas.style.height = height + 'px';\n    const ctx = globalCanvas.getContext('2d');\n    ctx.beginPath();\n    ctx.fillStyle = backgroundColor;\n    ctx.fillRect(0, 0, width * pixelRatio, height * pixelRatio);\n    return globalCanvas;\n};\n// 转为base64，绘制图片\nexport const draw = (width, height) => {\n    document.body.append(globalCanvas);\n    return globalCanvas.toDataURL();\n};\nexport { globalCanvas, pixelRatio };\n","import { globalCanvas, pixelRatio } from './canvas';\nimport { hex2Rgb, rgb2rgba, color2Rgb } from './utils';\n/**\n * 处理过长text显示\n * @param ctx\n * @param text\n * @param maxWidth 文字最大宽度\n */\nconst dealWords = (ctx, text, maxWidth) => {\n    const textWidth = ctx.measureText(text).width * pixelRatio;\n    const radio = text.length / textWidth;\n    const dis = textWidth - maxWidth;\n    if (dis > 0) {\n        text = text.slice(0, text.length - dis * radio) + '...';\n    }\n    return text;\n};\n/**\n * 绘制文字\n * @param texts text内容\n * @param isBlock 是否块内文字\n * @param blockX 块的x\n * @param blockY 块的y\n * @param blockWidth 块的宽\n * @param blockHeight 块的高\n */\nexport const drawText = (texts, isBlock, blockX = 0, blockY = 0, blockWidth = 0, blockHeight = 0) => {\n    const ctx = globalCanvas.getContext('2d');\n    let rgba;\n    const { x, y, text, fontSize, color = '#000', opacity = 1, lineHeight, lineNum, width = 9999, marginLeft, marginRight, textDecoration, baseLine = 'alphabetic', textAlign = 'start', fontFamily = 'sans-serif', fontWeight = 'normal', fontStyle = 'normal' } = texts;\n    // 格式化颜色\n    if (color.substring(0, 1) === '#') {\n        rgba = rgb2rgba(hex2Rgb(color), opacity);\n    }\n    else if (color.substring(0, 4) === 'rgba') {\n        rgba = color;\n    }\n    else if (color.substring(0, 3) === 'rgb') {\n        rgba = rgb2rgba(color, opacity);\n    }\n    else {\n        rgba = rgb2rgba(color2Rgb(color), opacity);\n    }\n    const dealText = dealWords(ctx, text, width);\n    if (isBlock) {\n        const textWidth = ctx.measureText(text).width * pixelRatio;\n        // 判断文字是否在blocks中\n        if (x > blockX && x + textWidth < blockX + blockWidth && (y > blockY + fontSize && y + fontSize < blockY + blockHeight)) {\n            ctx.font = `${fontStyle} ${fontWeight} ${fontSize}px ${fontFamily}`;\n            ctx.fillStyle = rgba;\n            ctx.textBaseline = baseLine;\n            ctx.textAlign = textAlign;\n            ctx.fillText(dealText, x, y);\n        }\n    }\n    else {\n        ctx.font = `${fontStyle} ${fontWeight} ${fontSize}px ${fontFamily}`;\n        ctx.fillStyle = rgba;\n        ctx.textBaseline = baseLine;\n        ctx.textAlign = textAlign;\n        ctx.fillText(dealText, x, y);\n    }\n};\n/**\n * 处理文字\n * @param texts\n * @param textConfig 块的相关参数\n */\nexport const texts = (texts, textConfig) => {\n    const { isBlock, x, y, width, height } = textConfig;\n    if (!texts[0]) {\n        return;\n    }\n    for (let i = 0; i < texts.length; i++) {\n        drawText(texts[i], isBlock, x, y, width, height);\n        if (i === texts.length - 1) {\n            return globalCanvas;\n        }\n    }\n};\n","import { globalCanvas } from './canvas';\nimport { texts } from './text';\n/**\n * 封装的一个用于绘制圆角矩形的函数\n * @param blocks\n */\nexport const drawBlock = (blocks) => {\n    const ctx = globalCanvas.getContext('2d');\n    const { x, y, width, height, borderWidth, borderColor, borderRadius: radius = 0, backgroundColor, text = '' } = blocks;\n    ctx.beginPath();\n    ctx.moveTo(x, y + radius);\n    ctx.lineTo(x, y + height - radius);\n    ctx.quadraticCurveTo(x, y + height, x + radius, y + height);\n    ctx.lineTo(x + width - radius, y + height);\n    ctx.quadraticCurveTo(x + width, y + height, x + width, y + height - radius);\n    ctx.lineTo(x + width, y + radius);\n    ctx.quadraticCurveTo(x + width, y, x + width - radius, y);\n    ctx.lineTo(x + radius, y);\n    ctx.quadraticCurveTo(x, y, x, y + radius);\n    ctx.lineWidth = borderWidth;\n    ctx.strokeStyle = borderColor;\n    ctx.fillStyle = backgroundColor || undefined; // rgba(ff,ff,ff,opacity)\n    ctx.stroke();\n    ctx.fill();\n    if (text !== '') {\n        texts(text.text, { isBlock: true, x, y, width, height });\n    }\n};\n// 添加块\n// export const block = (blocks: IBlocks[]) => {\n//   mutiSort(blocks);\n//   if (!blocks[0]) {\n//     return;\n//   }\n//   for (let i = 0; i < blocks.length; i++) {\n//     // const { width, height } = blocks[i];\n//     // const canvas = create(200, 200);\n//     // const ctx = canvas.getContext('2d');\n//     // await roundedRect(blocks[i]);\n//     // console.log(canvas.toDataURL());\n//     drawBlock(blocks[i]);\n//     if (i === blocks.length - 1) {\n//       console.log('blocks');\n//       return globalCanvas;\n//     }\n//   }\n// };\n","import { globalCanvas } from './canvas';\n/**\n * 绘制线\n * @param lines\n */\nexport const drawLine = (lines) => {\n    const ctx = globalCanvas.getContext('2d');\n    const { startX, startY, endX, endY, width, color, zIndex } = lines;\n    ctx.beginPath();\n    ctx.moveTo(startX, startY);\n    ctx.lineTo(endX, endY);\n    ctx.strokeStyle = color;\n    ctx.lineWidth = width;\n    ctx.closePath();\n    ctx.stroke();\n};\n// 添加线\n// export const line = (lines: ILines[]) => {\n//   mutiSort(lines);\n//   if (!lines[0]) {\n//     return;\n//   }\n//   for (let i = 0; i < lines.length; i++) {\n//     drawLine(lines[i]);\n//     if (i === lines.length - 1) {\n//       console.log('lines');\n//       return globalCanvas;\n//     }\n//   }\n// };\n","import { globalCanvas } from './canvas';\n/**\n * 绘制图片（包括圆角图片））\n * @param images\n */\nexport const drawImage = (images) => {\n    const ctx = globalCanvas.getContext('2d');\n    return new Promise((resolve) => {\n        const { x, y, url, borderRadius = 0, borderWidth = 0, borderColor = '#fff' } = images;\n        let { width, height } = images;\n        const img = new Image();\n        img.src = url;\n        img.crossOrigin = 'Anonymous';\n        img.style.borderRadius = '35px';\n        // console.log('000999', img.height, img.width);\n        img.onload = () => {\n            if (!width && !height) {\n                width = img.width;\n                height = img.height;\n            }\n            if (!width && height) {\n                width = (img.width / img.height) * height;\n            }\n            if (width && !height) {\n                height = (img.height / img.width) * width;\n            }\n            // 开始绘制圆角图片\n            const pattern = ctx.createPattern(img, 'no-repeat');\n            const r = borderRadius;\n            const w = width;\n            const h = height;\n            ctx.save();\n            ctx.beginPath();\n            ctx.moveTo(x + r, y);\n            ctx.arcTo(x + w, y, x + w, y + h, r);\n            ctx.arcTo(x + w, y + h, x, y + h, r);\n            ctx.arcTo(x, y + h, x, y, r);\n            ctx.arcTo(x, y, x + w, y, r);\n            ctx.lineWidth = borderWidth;\n            ctx.strokeStyle = borderColor;\n            ctx.stroke();\n            ctx.closePath();\n            ctx.fillStyle = pattern;\n            ctx.fill();\n            ctx.clip();\n            ctx.drawImage(img, x, y, width, height);\n            // ctx.drawImage(img, 0, 0, img.width, img.height, x, y, width, height);\n            ctx.restore();\n            resolve(1);\n        };\n    });\n};\n/**\n * 裁剪圆形图片，位置限制在裁剪区域\n * @param images\n */\nexport const drawCirleImage = (images) => {\n    const ctx = globalCanvas.getContext('2d');\n    return new Promise((resolve) => {\n        const { x, y, width, height, url, borderRadius, borderWidth, borderColor } = images;\n        const img = new Image();\n        img.src = url;\n        img.crossOrigin = 'Anonymous';\n        img.onload = () => {\n            // let r: number;\n            // if (img.width > img.height) {\n            //   r = img.height / 2;\n            // } else {\n            //   r = img.width / 2;\n            // }\n            const r = width;\n            const d = 2 * r;\n            const cx = x + r;\n            const cy = y + r;\n            const pattern = ctx.createPattern(img, 'no-repeat');\n            ctx.save();\n            ctx.beginPath();\n            ctx.moveTo(x + r, y);\n            ctx.arc(cx, cy, r, 0, 2 * Math.PI);\n            ctx.fillStyle = pattern;\n            ctx.fill();\n            ctx.clip();\n            ctx.drawImage(img, x, y, d, d);\n            ctx.restore();\n            resolve(1);\n        };\n    });\n};\n// // 添加图片\n// export const image = async (images: IImages[]) => {\n//   mutiSort(images);\n//   if (!images[0]) {\n//     return;\n//   }\n//   for (let i = 0; i < images.length; i++) {\n//     await drawImage(images[i]);\n//     // await drawCirleImage(images[i]);\n//     if (i === images.length - 1) {\n//       console.log('image');\n//       return globalCanvas;\n//     }\n//   }\n// };\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { configToData } from './utils';\nimport { createCanvas, draw } from './canvas';\nimport { drawBlock } from './block';\nimport { drawText } from './text';\nimport { drawLine } from './line';\nimport { drawImage, drawCirleImage } from './image';\n// export * from './libs/canvas';\nexport function create(config) {\n    const { width, height, backgroundColor = '#fff', debug, pixelRatio, blocks, texts, images, lines } = config;\n    return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n        const data = configToData(config);\n        createCanvas(width, height, backgroundColor);\n        for (let i = 0; i < data.length; i++) {\n            const item = data[i];\n            if (item.type === 'blocks') {\n                drawBlock(item);\n            }\n            else if (item.type === 'texts') {\n                drawText(item, false);\n            }\n            else if (item.type === 'lines') {\n                drawLine(item);\n            }\n            else if (item.type === 'images') {\n                const { width, height, borderRadius } = item;\n                if (width === height && width === borderRadius) {\n                    yield drawCirleImage(item);\n                }\n                else {\n                    yield drawImage(item);\n                }\n            }\n        }\n        const base64 = draw(width, height);\n        return resolve(base64);\n    }));\n}\n","export { create } from './libs';\n"],"sourceRoot":""}